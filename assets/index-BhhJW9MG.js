(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))c(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&c(s)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function c(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();const i=document.getElementById("inputText"),d=document.getElementById("key"),a=document.getElementById("outputText"),p=document.getElementById("encrypt"),f=document.getElementById("decrypt");async function m(){try{const e=i.value,t=d.value;if(!t)return alert("Please provide a password.");const n=await E(e,t);a.textContent=n}catch{a.textContent="Encryption failed."}}async function g(){try{const e=i.value,t=d.value;if(!t)return alert("Please provide a password.");const n=await x(e,t);a.textContent=n}catch{a.textContent="Decryption failed. Wrong password or corrupted data."}}function u(e){return new TextEncoder().encode(e)}function w(e){return new TextDecoder().decode(e)}function h(e){return btoa(String.fromCharCode(...new Uint8Array(e)))}function b(e){const t=atob(e),n=new Uint8Array(t.length);for(let c=0;c<t.length;c++)n[c]=t.charCodeAt(c);return n.buffer}async function l(e,t){const n=await crypto.subtle.importKey("raw",u(e),{name:"PBKDF2"},!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},n,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}async function E(e,t){const n=crypto.getRandomValues(new Uint8Array(12)),c=crypto.getRandomValues(new Uint8Array(16)),r=await l(t,c),o=await crypto.subtle.encrypt({name:"AES-GCM",iv:n},r,u(e)),s=new Uint8Array(c.length+n.length+o.byteLength);return s.set(c,0),s.set(n,c.length),s.set(new Uint8Array(o),c.length+n.length),h(s.buffer)}async function x(e,t){const n=new Uint8Array(b(e)),c=n.slice(0,16),r=n.slice(16,28),o=n.slice(28),s=await l(t,c),y=await crypto.subtle.decrypt({name:"AES-GCM",iv:r},s,o);return w(y)}p.addEventListener("click",m);f.addEventListener("click",g);
